public enum ResponseModel {
    EMPLOYEE_RESPONSE("EmployeeResponse", "net.jpmchase.payroll.product.model.gusto.Employee.EmployeeResponse"),
    CONTRACTOR_RESPONSE("ContractorResponse", "net.jpmchase.payroll.product.model.gusto.Contractor.ContractorResponse");

    private final String simpleName;
    private final String fullyQualifiedName;

    ResponseModel(String simpleName, String fullyQualifiedName) {
        this.simpleName = simpleName;
        this.fullyQualifiedName = fullyQualifiedName;
    }

    public String getFullyQualifiedName() {
        return fullyQualifiedName;
    }

    public static String getFullyQualifiedName(String simpleName) {
        for (ResponseModel model : values()) {
            if (model.simpleName.equals(simpleName)) {
                return model.fullyQualifiedName;
            }
        }
        throw new IllegalArgumentException("No mapping found for class: " + simpleName);
    }
}

responseExtensions.forEach((statusCode, responseDetail) -> {
    if (!statusCode.equals("DefaultApiResponses")) {
        String className = (String) responseDetail; // Only the simple name is provided
        String description = "Successful Response";

        // Resolve the fully qualified name using the enum
        String fullyQualifiedName = ResponseModel.getFullyQualifiedName(className);

        // Add the API response with the resolved class name
        addApiResponse(responses, statusCode, description, fullyQualifiedName);
    }
});
 
